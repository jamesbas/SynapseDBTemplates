{
	"name": "TransformMoviesLoadSynapse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADLS_Movies_CSV",
						"type": "DatasetReference"
					},
					"name": "MoviesADLS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SynapseDB_Movies",
						"type": "DatasetReference"
					},
					"name": "SinkToSynapseDedPool"
				}
			],
			"transformations": [
				{
					"name": "SelectAndRename"
				},
				{
					"name": "FilterYearsBefore1950"
				},
				{
					"name": "DerivePrimaryGenre"
				},
				{
					"name": "RankMoviesByRatings"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          {Rottoen Tomato} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesADLS",
				"MoviesADLS select(mapColumn(",
				"          movie,",
				"          title,",
				"          genres,",
				"          year,",
				"          Rating,",
				"          RottenTomato = {Rottoen Tomato}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectAndRename",
				"SelectAndRename filter(toInteger(year) > 1950) ~> FilterYearsBefore1950",
				"FilterYearsBefore1950 derive(PrimaryGenre = iif(locate('|', genres) > 1, left(genres, locate('|', genres) - 1), genres)) ~> DerivePrimaryGenre",
				"DerivePrimaryGenre window(over(PrimaryGenre,",
				"          year),",
				"     desc(RottenTomato, true),",
				"     RatingsRank = rank()) ~> RankMoviesByRatings",
				"RankMoviesByRatings sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          RottenTomato as string,",
				"          PrimaryGenre as string,",
				"          RatingsRank as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkToSynapseDedPool"
			]
		}
	}
}